CREATE TABLE IF NOT EXISTS users (
    id INTEGER generated by default as identity PRIMARY KEY,
    email VARCHAR(40) NOT NULL,
    login VARCHAR(50) NOT NULL,
    name VARCHAR(50),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id INTEGER generated by default as identity PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(50) NOT NULL,
  release_date DATE NOT NULL,
  duration INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL,
    genre_id INTEGER NOT NULL,
    CONSTRAINT fk_film_genre FOREIGN KEY (film_id) REFERENCES films(id),
    CONSTRAINT fk_genre_id FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS film_mpa (
    film_id INTEGER NOT NULL,
    mpa_id INTEGER NOT NULL,
    CONSTRAINT fk_film_mpa FOREIGN KEY (film_id) REFERENCES films(id),
    CONSTRAINT fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa(mpa_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    CONSTRAINT fk_film_like FOREIGN KEY (film_id) REFERENCES films(id),
    CONSTRAINT fk_user_lke FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    confirmed BOOLEAN NOT NULL,
    CONSTRAINT fk_user_friendship FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_friend_friendship FOREIGN KEY (friend_id) REFERENCES users(id)
)

